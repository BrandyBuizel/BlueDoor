// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_flixel_util_FlxUnicodeUtil
#include <flixel/util/FlxUnicodeUtil.h>
#endif
#ifndef INCLUDED_haxe_Utf8
#include <haxe/Utf8.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_36b7e3e8752e2119_15_uLength,"flixel.util.FlxUnicodeUtil","uLength",0x9c838c34,"flixel.util.FlxUnicodeUtil.uLength","flixel/util/FlxUnicodeUtil.hx",15,0x26f9f857)
HX_LOCAL_STACK_FRAME(_hx_pos_36b7e3e8752e2119_24_uEquals,"flixel.util.FlxUnicodeUtil","uEquals",0xbd6ee58d,"flixel.util.FlxUnicodeUtil.uEquals","flixel/util/FlxUnicodeUtil.hx",24,0x26f9f857)
HX_LOCAL_STACK_FRAME(_hx_pos_36b7e3e8752e2119_33_uSub,"flixel.util.FlxUnicodeUtil","uSub",0xecba3572,"flixel.util.FlxUnicodeUtil.uSub","flixel/util/FlxUnicodeUtil.hx",33,0x26f9f857)
HX_LOCAL_STACK_FRAME(_hx_pos_36b7e3e8752e2119_42_uCharCodeAt,"flixel.util.FlxUnicodeUtil","uCharCodeAt",0xeed99d44,"flixel.util.FlxUnicodeUtil.uCharCodeAt","flixel/util/FlxUnicodeUtil.hx",42,0x26f9f857)
namespace flixel{
namespace util{

void FlxUnicodeUtil_obj::__construct() { }

Dynamic FlxUnicodeUtil_obj::__CreateEmpty() { return new FlxUnicodeUtil_obj; }

void *FlxUnicodeUtil_obj::_hx_vtable = 0;

Dynamic FlxUnicodeUtil_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxUnicodeUtil_obj > _hx_result = new FlxUnicodeUtil_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FlxUnicodeUtil_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x62e8996b;
}

int FlxUnicodeUtil_obj::uLength(::String s){
            	HX_STACKFRAME(&_hx_pos_36b7e3e8752e2119_15_uLength)
HXDLIN(  15)		return ::haxe::Utf8_obj::length(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxUnicodeUtil_obj,uLength,return )

bool FlxUnicodeUtil_obj::uEquals(::String a,::String b){
            	HX_STACKFRAME(&_hx_pos_36b7e3e8752e2119_24_uEquals)
HXDLIN(  24)		return (::haxe::Utf8_obj::compare(a,b) == (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FlxUnicodeUtil_obj,uEquals,return )

::String FlxUnicodeUtil_obj::uSub(::String s,int pos,int len){
            	HX_STACKFRAME(&_hx_pos_36b7e3e8752e2119_33_uSub)
HXDLIN(  33)		return ::haxe::Utf8_obj::sub(s,pos,len);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(FlxUnicodeUtil_obj,uSub,return )

 ::Dynamic FlxUnicodeUtil_obj::uCharCodeAt(::String s,int index){
            	HX_STACKFRAME(&_hx_pos_36b7e3e8752e2119_42_uCharCodeAt)
HXDLIN(  42)		return ::haxe::Utf8_obj::charCodeAt(s,index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(FlxUnicodeUtil_obj,uCharCodeAt,return )


FlxUnicodeUtil_obj::FlxUnicodeUtil_obj()
{
}

bool FlxUnicodeUtil_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"uSub") ) { outValue = uSub_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"uLength") ) { outValue = uLength_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uEquals") ) { outValue = uEquals_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"uCharCodeAt") ) { outValue = uCharCodeAt_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *FlxUnicodeUtil_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *FlxUnicodeUtil_obj_sStaticStorageInfo = 0;
#endif

static void FlxUnicodeUtil_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxUnicodeUtil_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxUnicodeUtil_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxUnicodeUtil_obj::__mClass,"__mClass");
};

#endif

hx::Class FlxUnicodeUtil_obj::__mClass;

static ::String FlxUnicodeUtil_obj_sStaticFields[] = {
	HX_HCSTRING("uLength","\x3b","\x4f","\xeb","\xd4"),
	HX_HCSTRING("uEquals","\x94","\xa8","\xd6","\xf5"),
	HX_HCSTRING("uSub","\x0b","\x58","\x95","\x4d"),
	HX_HCSTRING("uCharCodeAt","\xcb","\xef","\xac","\x11"),
	::String(null())
};

void FlxUnicodeUtil_obj::__register()
{
	hx::Object *dummy = new FlxUnicodeUtil_obj;
	FlxUnicodeUtil_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.util.FlxUnicodeUtil","\x67","\x7c","\x8a","\x18");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FlxUnicodeUtil_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxUnicodeUtil_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(FlxUnicodeUtil_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< FlxUnicodeUtil_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxUnicodeUtil_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxUnicodeUtil_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxUnicodeUtil_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace util
