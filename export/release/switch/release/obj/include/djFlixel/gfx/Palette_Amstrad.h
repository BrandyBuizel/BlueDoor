// Generated by Haxe 3.4.7
#ifndef INCLUDED_djFlixel_gfx_Palette_Amstrad
#define INCLUDED_djFlixel_gfx_Palette_Amstrad

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(djFlixel,gfx,Palette_Amstrad)

namespace djFlixel{
namespace gfx{


class HXCPP_CLASS_ATTRIBUTES Palette_Amstrad_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Palette_Amstrad_obj OBJ_;
		Palette_Amstrad_obj();

	public:
		enum { _hx_ClassId = 0x45ad548d };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="djFlixel.gfx.Palette_Amstrad")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"djFlixel.gfx.Palette_Amstrad"); }

		hx::ObjectPtr< Palette_Amstrad_obj > __new() {
			hx::ObjectPtr< Palette_Amstrad_obj > __this = new Palette_Amstrad_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Palette_Amstrad_obj > __alloc(hx::Ctx *_hx_ctx) {
			Palette_Amstrad_obj *__this = (Palette_Amstrad_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Palette_Amstrad_obj), false, "djFlixel.gfx.Palette_Amstrad"));
			*(void **)__this = Palette_Amstrad_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Palette_Amstrad_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Palette_Amstrad","\x24","\x2e","\x79","\x51"); }

		static void __boot();
		static ::Array< int > COL;
};

} // end namespace djFlixel
} // end namespace gfx

#endif /* INCLUDED_djFlixel_gfx_Palette_Amstrad */ 
