// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_djFlixel_gfx_Palette_Amstrad
#include <djFlixel/gfx/Palette_Amstrad.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_3cca1aa237ec1ea1_13_boot,"djFlixel.gfx.Palette_Amstrad","boot",0xc10dd33d,"djFlixel.gfx.Palette_Amstrad.boot","djFlixel/gfx/Palette_Amstrad.hx",13,0x93b41e5d)
static const int _hx_array_data_727a6d43_1[] = {
	(int)-16777216,(int)-16777088,(int)-16776961,(int)-8388608,(int)-8388480,(int)-8388353,(int)-65536,(int)-65408,(int)-65281,(int)-16744448,(int)-16744320,(int)-16744193,(int)-8355840,(int)-8355712,(int)-8355585,(int)-32768,(int)-32640,(int)-32513,(int)-16711936,(int)-16711808,(int)-16711681,(int)-8323328,(int)-8323200,(int)-8323073,(int)-256,(int)-128,(int)-1,
};
namespace djFlixel{
namespace gfx{

void Palette_Amstrad_obj::__construct() { }

Dynamic Palette_Amstrad_obj::__CreateEmpty() { return new Palette_Amstrad_obj; }

void *Palette_Amstrad_obj::_hx_vtable = 0;

Dynamic Palette_Amstrad_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Palette_Amstrad_obj > _hx_result = new Palette_Amstrad_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Palette_Amstrad_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x45ad548d;
}

::Array< int > Palette_Amstrad_obj::COL;


Palette_Amstrad_obj::Palette_Amstrad_obj()
{
}

bool Palette_Amstrad_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"COL") ) { outValue = ( COL ); return true; }
	}
	return false;
}

bool Palette_Amstrad_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"COL") ) { COL=ioValue.Cast< ::Array< int > >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Palette_Amstrad_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Palette_Amstrad_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Array< int >*/ ,(void *) &Palette_Amstrad_obj::COL,HX_HCSTRING("COL","\x20","\x1c","\x33","\x00")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Palette_Amstrad_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Palette_Amstrad_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Palette_Amstrad_obj::COL,"COL");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Palette_Amstrad_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Palette_Amstrad_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Palette_Amstrad_obj::COL,"COL");
};

#endif

hx::Class Palette_Amstrad_obj::__mClass;

static ::String Palette_Amstrad_obj_sStaticFields[] = {
	HX_HCSTRING("COL","\x20","\x1c","\x33","\x00"),
	::String(null())
};

void Palette_Amstrad_obj::__register()
{
	hx::Object *dummy = new Palette_Amstrad_obj;
	Palette_Amstrad_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("djFlixel.gfx.Palette_Amstrad","\x43","\x6d","\x7a","\x72");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Palette_Amstrad_obj::__GetStatic;
	__mClass->mSetStaticField = &Palette_Amstrad_obj::__SetStatic;
	__mClass->mMarkFunc = Palette_Amstrad_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Palette_Amstrad_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Palette_Amstrad_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Palette_Amstrad_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Palette_Amstrad_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Palette_Amstrad_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Palette_Amstrad_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_3cca1aa237ec1ea1_13_boot)
HXDLIN(  13)		COL = ::Array_obj< int >::fromData( _hx_array_data_727a6d43_1,27);
            	}
}

} // end namespace djFlixel
} // end namespace gfx
