// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_flixel_util__FlxUnicodeUtil_UnicodeBuffer_Impl_
#include <flixel/util/_FlxUnicodeUtil/UnicodeBuffer_Impl_.h>
#endif
#ifndef INCLUDED_haxe_Utf8
#include <haxe/Utf8.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_118c490c28c43de2_51__new,"flixel.util._FlxUnicodeUtil.UnicodeBuffer_Impl_","_new",0x2e99190e,"flixel.util._FlxUnicodeUtil.UnicodeBuffer_Impl_._new","flixel/util/FlxUnicodeUtil.hx",51,0x26f9f857)
HX_LOCAL_STACK_FRAME(_hx_pos_118c490c28c43de2_57_addChar,"flixel.util._FlxUnicodeUtil.UnicodeBuffer_Impl_","addChar",0x64c0680a,"flixel.util._FlxUnicodeUtil.UnicodeBuffer_Impl_.addChar","flixel/util/FlxUnicodeUtil.hx",57,0x26f9f857)
HX_LOCAL_STACK_FRAME(_hx_pos_118c490c28c43de2_71_toString,"flixel.util._FlxUnicodeUtil.UnicodeBuffer_Impl_","toString",0x3cf8aed9,"flixel.util._FlxUnicodeUtil.UnicodeBuffer_Impl_.toString","flixel/util/FlxUnicodeUtil.hx",71,0x26f9f857)
namespace flixel{
namespace util{
namespace _FlxUnicodeUtil{

void UnicodeBuffer_Impl__obj::__construct() { }

Dynamic UnicodeBuffer_Impl__obj::__CreateEmpty() { return new UnicodeBuffer_Impl__obj; }

void *UnicodeBuffer_Impl__obj::_hx_vtable = 0;

Dynamic UnicodeBuffer_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< UnicodeBuffer_Impl__obj > _hx_result = new UnicodeBuffer_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool UnicodeBuffer_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x50449a2f;
}

 ::haxe::Utf8 UnicodeBuffer_Impl__obj::_new(::String __o_s){
::String s = __o_s.Default(HX_HCSTRING("","\x00","\x00","\x00","\x00"));
            	HX_GC_STACKFRAME(&_hx_pos_118c490c28c43de2_51__new)
HXDLIN(  51)		 ::haxe::Utf8 this1 =  ::haxe::Utf8_obj::__alloc( HX_CTX ,null());
HXDLIN(  51)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(UnicodeBuffer_Impl__obj,_new,return )

 ::haxe::Utf8 UnicodeBuffer_Impl__obj::addChar( ::haxe::Utf8 this1,int c){
            	HX_STACKFRAME(&_hx_pos_118c490c28c43de2_57_addChar)
HXLINE(  61)		this1->addChar(c);
HXLINE(  62)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(UnicodeBuffer_Impl__obj,addChar,return )

::String UnicodeBuffer_Impl__obj::toString( ::haxe::Utf8 this1){
            	HX_STACKFRAME(&_hx_pos_118c490c28c43de2_71_toString)
HXDLIN(  71)		return this1->toString();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(UnicodeBuffer_Impl__obj,toString,return )


UnicodeBuffer_Impl__obj::UnicodeBuffer_Impl__obj()
{
}

bool UnicodeBuffer_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"addChar") ) { outValue = addChar_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *UnicodeBuffer_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *UnicodeBuffer_Impl__obj_sStaticStorageInfo = 0;
#endif

static void UnicodeBuffer_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(UnicodeBuffer_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void UnicodeBuffer_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(UnicodeBuffer_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class UnicodeBuffer_Impl__obj::__mClass;

static ::String UnicodeBuffer_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("addChar","\x97","\xa1","\xfc","\x7d"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null())
};

void UnicodeBuffer_Impl__obj::__register()
{
	hx::Object *dummy = new UnicodeBuffer_Impl__obj;
	UnicodeBuffer_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.util._FlxUnicodeUtil.UnicodeBuffer_Impl_","\xe1","\xfb","\x92","\xa5");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &UnicodeBuffer_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = UnicodeBuffer_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(UnicodeBuffer_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< UnicodeBuffer_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = UnicodeBuffer_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = UnicodeBuffer_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = UnicodeBuffer_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace util
} // end namespace _FlxUnicodeUtil
