// Generated by Haxe 3.4.7
#ifndef INCLUDED_djFlixel_gfx_Palette_DB32
#define INCLUDED_djFlixel_gfx_Palette_DB32

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(djFlixel,gfx,Palette_DB32)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)

namespace djFlixel{
namespace gfx{


class HXCPP_CLASS_ATTRIBUTES Palette_DB32_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Palette_DB32_obj OBJ_;
		Palette_DB32_obj();

	public:
		enum { _hx_ClassId = 0x2c326938 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="djFlixel.gfx.Palette_DB32")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"djFlixel.gfx.Palette_DB32"); }

		hx::ObjectPtr< Palette_DB32_obj > __new() {
			hx::ObjectPtr< Palette_DB32_obj > __this = new Palette_DB32_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Palette_DB32_obj > __alloc(hx::Ctx *_hx_ctx) {
			Palette_DB32_obj *__this = (Palette_DB32_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Palette_DB32_obj), false, "djFlixel.gfx.Palette_DB32"));
			*(void **)__this = Palette_DB32_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Palette_DB32_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Palette_DB32","\x41","\xbb","\x98","\xbd"); }

		static void __boot();
		static ::Array< int > COL;
		static int COL_01;
		static int COL_02;
		static int COL_03;
		static int COL_04;
		static int COL_05;
		static int COL_06;
		static int COL_07;
		static int COL_08;
		static int COL_09;
		static int COL_10;
		static int COL_11;
		static int COL_12;
		static int COL_13;
		static int COL_14;
		static int COL_15;
		static int COL_16;
		static int COL_17;
		static int COL_18;
		static int COL_19;
		static int COL_20;
		static int COL_21;
		static int COL_22;
		static int COL_23;
		static int COL_24;
		static int COL_25;
		static int COL_26;
		static int COL_27;
		static int COL_28;
		static int COL_29;
		static int COL_30;
		static int COL_31;
		static int COL_32;
		static  ::haxe::ds::StringMap colorCombo;
		static ::Array< ::String > availCombos;
		static bool isInited;
		static void init();
		static ::Dynamic init_dyn();

		static ::String getRandomCombo();
		static ::Dynamic getRandomCombo_dyn();

		static int random();
		static ::Dynamic random_dyn();

};

} // end namespace djFlixel
} // end namespace gfx

#endif /* INCLUDED_djFlixel_gfx_Palette_DB32 */ 
