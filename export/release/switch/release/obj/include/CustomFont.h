// Generated by Haxe 3.4.7
#ifndef INCLUDED_CustomFont
#define INCLUDED_CustomFont

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_text_Font
#include <openfl/text/Font.h>
#endif
HX_DECLARE_CLASS0(CustomFont)
HX_DECLARE_CLASS2(lime,text,Font)
HX_DECLARE_CLASS2(openfl,text,Font)



class HXCPP_CLASS_ATTRIBUTES CustomFont_obj : public  ::openfl::text::Font_obj
{
	public:
		typedef  ::openfl::text::Font_obj super;
		typedef CustomFont_obj OBJ_;
		CustomFont_obj();

	public:
		enum { _hx_ClassId = 0x45dd0d08 };

		void __construct(::String name);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="CustomFont")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"CustomFont"); }
		static hx::ObjectPtr< CustomFont_obj > __new(::String name);
		static hx::ObjectPtr< CustomFont_obj > __alloc(hx::Ctx *_hx_ctx,::String name);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~CustomFont_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("CustomFont","\x40","\x42","\x19","\x98"); }

};


#endif /* INCLUDED_CustomFont */ 
