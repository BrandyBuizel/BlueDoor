// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_djFlixel_tool_DEST
#include <djFlixel/tool/DEST.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_NumTween
#include <flixel/tweens/misc/NumTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimer
#include <flixel/util/FlxTimer.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_c2aaf174cd235610_20_timer,"djFlixel.tool.DEST","timer",0x491b6c23,"djFlixel.tool.DEST.timer","djFlixel/tool/DEST.hx",20,0xe97f5792)
HX_LOCAL_STACK_FRAME(_hx_pos_c2aaf174cd235610_30_tween,"djFlixel.tool.DEST","tween",0x525656c9,"djFlixel.tool.DEST.tween","djFlixel/tool/DEST.hx",30,0xe97f5792)
HX_LOCAL_STACK_FRAME(_hx_pos_c2aaf174cd235610_40_numTween,"djFlixel.tool.DEST","numTween",0x6990a0a7,"djFlixel.tool.DEST.numTween","djFlixel/tool/DEST.hx",40,0xe97f5792)
HX_LOCAL_STACK_FRAME(_hx_pos_c2aaf174cd235610_51_tweenAr,"djFlixel.tool.DEST","tweenAr",0x55b0941a,"djFlixel.tool.DEST.tweenAr","djFlixel/tool/DEST.hx",51,0xe97f5792)
HX_LOCAL_STACK_FRAME(_hx_pos_c2aaf174cd235610_61_map,"djFlixel.tool.DEST","map",0xd052437a,"djFlixel.tool.DEST.map","djFlixel/tool/DEST.hx",61,0xe97f5792)
namespace djFlixel{
namespace tool{

void DEST_obj::__construct() { }

Dynamic DEST_obj::__CreateEmpty() { return new DEST_obj; }

void *DEST_obj::_hx_vtable = 0;

Dynamic DEST_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DEST_obj > _hx_result = new DEST_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DEST_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x535c8520;
}

 ::flixel::util::FlxTimer DEST_obj::timer( ::flixel::util::FlxTimer t){
            	HX_STACKFRAME(&_hx_pos_c2aaf174cd235610_20_timer)
HXLINE(  21)		if (hx::IsNotNull( t )) {
HXLINE(  22)			t->cancel();
HXDLIN(  22)			t->destroy();
            		}
HXLINE(  23)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DEST_obj,timer,return )

 ::flixel::tweens::misc::VarTween DEST_obj::tween( ::flixel::tweens::misc::VarTween t){
            	HX_STACKFRAME(&_hx_pos_c2aaf174cd235610_30_tween)
HXLINE(  31)		if (hx::IsNotNull( t )) {
HXLINE(  32)			t->cancel();
HXDLIN(  32)			t->destroy();
            		}
HXLINE(  33)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DEST_obj,tween,return )

 ::flixel::tweens::misc::NumTween DEST_obj::numTween( ::flixel::tweens::misc::NumTween t){
            	HX_STACKFRAME(&_hx_pos_c2aaf174cd235610_40_numTween)
HXLINE(  41)		if (hx::IsNotNull( t )) {
HXLINE(  42)			t->cancel();
HXDLIN(  42)			t->destroy();
            		}
HXLINE(  43)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DEST_obj,numTween,return )

::Array< ::Dynamic> DEST_obj::tweenAr(::Array< ::Dynamic> a){
            	HX_STACKFRAME(&_hx_pos_c2aaf174cd235610_51_tweenAr)
HXLINE(  52)		if (hx::IsNotNull( a )) {
HXLINE(  53)			int _g = (int)0;
HXDLIN(  53)			while((_g < a->length)){
HXLINE(  53)				 ::flixel::tweens::misc::VarTween i = a->__get(_g).StaticCast<  ::flixel::tweens::misc::VarTween >();
HXDLIN(  53)				_g = (_g + (int)1);
HXDLIN(  53)				i = ::djFlixel::tool::DEST_obj::tween(i);
            			}
            		}
HXLINE(  54)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DEST_obj,tweenAr,return )

::Dynamic DEST_obj::map(::Dynamic m){
            	HX_STACKFRAME(&_hx_pos_c2aaf174cd235610_61_map)
HXLINE(  62)		if (hx::IsNotNull( m )) {
HXLINE(  63)			 ::Dynamic e = ::haxe::IMap_obj::iterator(m);
HXDLIN(  63)			while(( (bool)(e->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE(  63)				 ::Dynamic e1 = e->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)();
HXDLIN(  63)				::flixel::util::IFlxDestroyable_obj::destroy(e1);
HXDLIN(  63)				e1 = null();
            			}
            		}
HXLINE(  65)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DEST_obj,map,return )


DEST_obj::DEST_obj()
{
}

bool DEST_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { outValue = map_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"timer") ) { outValue = timer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"tween") ) { outValue = tween_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"tweenAr") ) { outValue = tweenAr_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"numTween") ) { outValue = numTween_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *DEST_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *DEST_obj_sStaticStorageInfo = 0;
#endif

static void DEST_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DEST_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DEST_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DEST_obj::__mClass,"__mClass");
};

#endif

hx::Class DEST_obj::__mClass;

static ::String DEST_obj_sStaticFields[] = {
	HX_HCSTRING("timer","\xc5","\xbf","\x35","\x10"),
	HX_HCSTRING("tween","\x6b","\xaa","\x70","\x19"),
	HX_HCSTRING("numTween","\x45","\xbe","\x80","\xd6"),
	HX_HCSTRING("tweenAr","\x3c","\x94","\xc0","\xd6"),
	HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"),
	::String(null())
};

void DEST_obj::__register()
{
	hx::Object *dummy = new DEST_obj;
	DEST_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("djFlixel.tool.DEST","\x4c","\x52","\x92","\x62");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DEST_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = DEST_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(DEST_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< DEST_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DEST_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DEST_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DEST_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace djFlixel
} // end namespace tool
